version: "3.9"

services:
  web:
    build: ./app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      minio:          # Espera a que MinIO esté levantado
        condition: service_started
    restart: on-failure

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hashtagdb
    ports:
      - "5432:5432"
    healthcheck:                         # <- esto es nuevo, garantiza que el contenedor web solo arrancará después de que db esté listo.
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data   # Carpeta local -> directorio de datos de Postgres
  
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      - NODE_ENV=development
    depends_on: # garantiza que el frontend espere a que el backend esté listo
      - web
  
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"   # API MinIO/S3
      - "9001:9001"   # Consola web MinIO
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data